angular.module('Directives', [])
  .directive('pieGraph', pieGraph);
function pieGraph(){
  return{
    scope:{
      logs:'='
    },
    restrict:'AE',
    template:'<div id="chart" class="graph"></div>',
    link:function(scope){
		scope.init = function() {
			var width = 960,
			height = 500,
			radius = Math.min(width, height) / 2;

			scope.color = d3.scale.category20();

			scope.pie = d3.layout.pie()
				.value(function(d) { return d.nbLog; })
				.sort(null);

			scope.arc = d3.svg.arc()
				.innerRadius(radius - 100)
				.outerRadius(radius - 20);

			var svg = d3.select("body").append("svg")
				.attr("width", width)
				.attr("height", height)
			  .append("g")
				.attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

			scope.path = svg.selectAll("path")
						.data(scope.pie(scope.logs))
						.enter().append("path")
						  .attr("fill", function(d, i) { return scope.color(i); })
						  .attr("d", scope.arc)
						  .each(function(d) { this._current = d; }); // store the initial angles

			  /*d3.selectAll("input")
				  .on("change", change);

			  var timeout = setTimeout(function() {
				d3.select("input[value=\"oranges\"]").property("checked", true).each(change);
			  }, 2000);*/
		};

		scope.$on("refreshChart", function(event, logs) {
			console.log(logs);
			scope.logs = logs;
			scope.path = scope.path.data(scope.pie(scope.logs)); // compute the new angles
			scope.path.enter().append("path")
				.attr("fill", function(d, i) { return scope.color(i); })
				.attr("d", scope.arc)
				.each(function(d) { this._current = d; });
		});
		
		// Store the displayed angles in _current.
		// Then, interpolate from _current to the new angles.
		// During the transition, _current is updated in-place by d3.interpolate.
		function arcTween(a) {
			console.log(a);
			var i = d3.interpolate(this._current, a);
			this._current = i(0);
			return function(t) {
				return scope.arc(i(t));
			};
		}
		
		scope.init();
	}
  };
}

